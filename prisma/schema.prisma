// Robust Multi-School LMS Prisma Schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model School {
  id        String   @id @default(uuid())
  name      String
  code      String   @unique // For URL routing or selection
  logo      String?
  primaryColor String?
  secondaryColor String?
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  users     User[]
  courses   Course[]
  units     Unit[]
  assignments Assignment[]
}

model User {
  id        String   @id @default(uuid())
  email     String
  password  String
  role      String   // ADMIN, TEACHER, STUDENT, etc.
  firstName String?
  lastName  String?
  active    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  school    School   @relation(fields: [schoolId], references: [id])
  schoolId  String

  assignmentsCreated Assignment[] @relation("AssignmentCreatedBy")

  @@unique([email, schoolId])
}

model CoreSubject {
  id        String   @id @default(uuid())
  name      String   @unique
  courses   Course[]
}

model Course {
  id            String      @id @default(uuid())
  name          String
  coreSubject   CoreSubject @relation(fields: [coreSubjectId], references: [id])
  coreSubjectId String
  school        School      @relation(fields: [schoolId], references: [id])
  schoolId      String
  units         Unit[]
  assignments   Assignment[]
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@unique([name, schoolId])
}

model Unit {
  id        String   @id @default(uuid())
  name      String
  course    Course   @relation(fields: [courseId], references: [id])
  courseId  String
  school    School   @relation(fields: [schoolId], references: [id])
  schoolId  String
  assignments Assignment[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([name, courseId, schoolId])
}

model Assignment {
  id        String   @id @default(uuid())
  title     String
  type      String   // "quiz", "coding", "project", etc.
  data      Json?    // Assignment-specific data
  isShared  Boolean  @default(false)
  unit      Unit?    @relation(fields: [unitId], references: [id])
  unitId    String?
  course    Course?  @relation(fields: [courseId], references: [id])
  courseId  String?
  school    School   @relation(fields: [schoolId], references: [id])
  schoolId  String
  createdBy User     @relation("AssignmentCreatedBy", fields: [createdById], references: [id])
  createdById String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
} 